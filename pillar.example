# -*- mode: yaml -*-
{% set server_domain_name = 'sso.example.com' %}
letsencrypt:
  config: |
    server = https://acme-v01.api.letsencrypt.org/directory
    email = ops@example.com
    authenticator = webroot
    webroot-path = /var/www
    agree-tos = True
    renew-by-default = True
  domainsets:
    www:
      - {{ server_domain_name }}

nginx-shibboleth:
  overrides:
    conf_file: /etc/shibboleth/shibboleth2.xml
    generate_sp_cert: True
  config:
    shibboleth2:
      SPConfig:
        xmlns: 'urn:mace:shibboleth:2.0:native:sp:config'
        'xmlns:conf': 'urn:mace:shibboleth:2.0:native:sp:config'
        'xmlns:saml': 'urn:oasis:names:tc:SAML:2.0:assertion'
        'xmlns:samlp': 'urn:oasis:names:tc:SAML:2.0:protocol'
        'xmlns:md': 'urn:oasis:names:tc:SAML:2.0:metadata'
        clockSkew: 180
        RequestMapper:
          type: Native
          RequestMap:
            Host:
              name:{{ server_domain_name }}
              authType: shibboleth
              requireSession: 'true'
              Path:
                name: secure
        ApplicationDefaults:
          entityID: https://{{ server_domain_name }}/shibboleth
          REMOTE_USER: "eppn persistent-id targeted-id"
          Sessions:
            lifetime: 28800
            timeout: 3600
            relayState: 'ss:mem'
            checkAddress: 'false'
            handlerSSL: 'true'
            cookieProps: https
            SSO:
              discoveryProtocol: SAMLDS
              discoveryURL: "https://ds.example.org/DS/WAYF"
              text: SAML2 SAML1
            Logout:
              - SAML2 Local
            Handler:
              - type: MetadataGenerator
                Location: /Metadata
                signing: 'false'
              - type: Status
                Location: /Status
                acl: "127.0.0.1 ::1"
              - type: Session
                Location: /Session
                showAttributeValues: 'false'
              - type: DiscoveryFeed
                Location: /DiscoFeed
          Errors:
            supportContact: root@localhost
            helpLocation: /about.html
            styleSheet: /shibboleth-sp/main.css
          MetadataProvider:
            type: XML
            uri: 'http://web.mit.edu/touchstone/shibboleth/config/metadata/MIT-metadata.xml'
            backingFilePath: MIT-metadata.xml
            reloadInterval: 7200
            MetadataFilter:
              type: EntityRoleWhitelist
              RetainedRole:
                - 'md:IDPSSODescriptor'
                - 'md:AttributeAuthorityDescriptor'
          AttributeExtractor:
            type: XML
            validate: "true"
            reloadChanges: "false"
            path: attribute-map.xml
          AttributeResolver:
            type: Query
            subjectMatch: "true"
          AttributeFilter:
            type: XML
            validate: "true"
            path: attribute-policy.xml
          CredentialResolver:
            type: File
            key: sp-key.pem
            certificate: sp-cert.pem
        SecurityPolicyProvider:
          type: XML
          validate: "true"
          path: security-policy.xml
        ProtocolProvider:
          type: XML
          validate: "true"
          reloadChanges: "false"
          path: protocols.xml

nginx:
  ng:
    install_from_source: True
    source_version: 1.13.4
    source_hash: de21f3c49ba65c611329d8759a63d72e5fcf719bc6f2a3270e2541348ef1fbba
    servers:
      managed:
        shibtest:
          enabled: True
          config:
            - server:
                - server_name: {{ server_domain_name }}
                - listen:
                    - 80
                - listen:
                    - '[::]:80'
                - location /.well-known/:
                    - alias: /var/www/.well-known/
            {% if salt.file.directory_exists('/etc/letsencrypt/live/{}'.format(server_domain_name)) %}
                - location /:
                    - return: 301 https://$host$request_uri
            - server:
                - server_name: {{ server_domain_name }}
                - listen:
                    - 443
                    - ssl
                - listen:
                    - '[::]:443'
                    - ssl
                - ssl_certificate: /etc/letsencrypt/live/{{ server_domain_name }}/fullchain.pem
                - ssl_certificate_key: /etc/letsencrypt/live/{{ server_domain_name }}/privkey.pem
                - ssl_trusted_certificate: /etc/letsencrypt/live/{{ server_domain_name }}/chain.pem
                - ssl_stapling: 'on'
                - ssl_stapling_verify: 'on'
                - ssl_session_timeout: 1d
                - ssl_session_tickets: 'off'
                - ssl_protocols:
                    - TLSv1.2
                - ssl_ciphers: "ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256\
                     :ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384\
                     :DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256\
                     :ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384\
                     :ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256\
                     :DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256\
                     :AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS"
                - ssl_prefer_server_ciphers: 'on'
                - resolver: 8.8.8.8
            {% endif %}
                - location /shibauthorizer:
                    - internal: ''
                    - include: fastcgi_params
                    - include: includes/shib_fastcgi_params
                    - fastcgi_pass: 'unix:/run/shibauthorizer.sock'
                - location /Shibboleth.sso:
                    - include: fastcgi_params
                    - include: includes/shib_fastcgi_params
                    - fastcgi_pass: 'unix:/run/shibresponder.sock'
                - location /login:
                    - include: includes/shib_clear_headers
                    - shib_request: /shibauthorizer
                    - shib_request_use_headers: 'on'
